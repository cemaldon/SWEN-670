/* Copyright (c) 2006, Sun Microsystems, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Sun Microsystems, Inc. nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

options {
  JAVA_UNICODE_ESCAPE = true;
  ERROR_REPORTING = false;
  STATIC = false;
  COMMON_TOKEN_ACTION = false;
  TOKEN_FACTORY = "Token";
  JDK_VERSION = "1.7";
  BUILD_PARSER = false;
}

PARSER_BEGIN(JavaParser)

package org.syntaxhighlighting.jcclexer;

public class JavaParser{}

PARSER_END(JavaParser)

/* WHITE SPACE */

TOKEN:
{
   <whitespace: ([" " , "\t" , "\n" , "\r"])+>
}

/* RESERVED WORDS AND LITERALS */

TOKEN :
{
   <comment: "#" (~["\n","\r"])* ("\n" | "\r" | "\r\n")?>

}

TOKEN:
{
   <number: (["0"-"9"] (["0"-"9", "."])*)>
}

TOKEN:
{
   <
      identifier: 
       ["a"-"z", "A"-"Z"] 
       ~[" "]
       (["\t", "\n", "\r", "?", ":", "<", ">", "/", "*", "-", "+", ".", ",", "=", "{", "}",
        "(", ")", "[", "]", "!", "@", "#", "$", "%", "^", "&", "~", "|", "\\", ";" 
       ])*
  >
}

/* SEPARATORS */

TOKEN :
{
  < separator: "{" | "}" | ";" >
}

TOKEN:
{
   <keyword: 
    "-injars" |
    "-inpath" |
    "-aspectpath" |
    "-argfile" |
    "-outjar" |
    "-outxml" |
    "-outxmlfile" |
    "-incremental" |
    "-sourceroots" |
    "-crossrefs" |
    "-Xlint" |
    "-Xlintfile" |
    "-classpath" |
    "-bootclasspath" |
    "-extdirs" |
    "-d" |
    "-target" |
    "-1.3" |
    "-1.4" |
    "-1.5" |
    "-1.6" |
    "-source" |
    "-nowarn" |
    "-warn" |
    "-deprecation" |
    "-noImportError" |
    "-proceedOnError" |
    "-g" |
    "-preserveAllLocals" |
    "-referenceInfo" |
    "-encoding" |
    "-verbose" |
    "-log" |
    "-progress" |
    "-time" |
    "-showWeaveInfo"
>
}

/* OPERATORS */

TOKEN :
{
  < operator: ("<" | ">" | "~" | "?" | ":" | "==" | "<=" 
              | ">=" | "!=" | "-" | "*" | "/" | "&" | "|" | "^" 
              | "%" | "\\" | "$" | "#" | "!" | "[" | "]" | "(" 
              | ")" | "=" | "," | "." | "+" | "==" )
  >
}
